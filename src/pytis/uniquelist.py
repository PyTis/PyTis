#!/usr/bin/env python
# ##############################################################################
# The contents of this file are subject to the PyTis Public License Version    #
# 3.0 (the "License"); you may not use this file except in compliance with     #
# the License. You may obtain a copy of the License at                         #
#                                                                              #
#     http://www.PyTis.com/License/                                            #
#                                                                              #
#     Copyright Â© 2022 Josh Lee                                                #
#                                                                              #
# Software distributed under the License is distributed on an "AS IS" basis,   #
# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License     #
# for the specific language governing rights and limitations under the         #
# License.                                                                     #
#                                                                              #
# @auto-generated by the PyTis Copyright Tool on 01:55 PM - 03 Aug, 2022       #
############################################################################## #
"""uniquelist
==========
Input from STDIN, all lines are sorted, unique lines are output
"""

import optparse
import os
from pprint import pprint
import sys


__author__ = 'Josh Lee'
__created__ = '05:53pm 06 Jun, 2011'
__copyright__ = 'PyTis.com'
__curdir__ = os.path.abspath(os.path.dirname(__file__))
__version__ = '2.0'


def parse(lines):
  ret = []
  for line in lines:
    line = line.strip()
    if not line: 
      continue
    if not line.startswith('#'):
      if line not in ret and line.strip():
        ret.append(line.strip())
  ret.sort()
  return ret


def main():
  """usage: `cat` somefile.txt | uniquelist """
  global __version__
  parser = optparse.OptionParser(description=__doc__)
  parser.set_usage(main.__doc__)

  parser.add_option("-m", "--mp3", action="store_true",
                    default=False, dest="mp3",
                    help="For Winamp playlist (alias for winamp)")

  parser.add_option("-w", "--winamp", action="store_true",
                    default=False, dest="mp3",
                    help="For Winamp playlist")

  parser.formatter.format_description = lambda s:s

  parser.add_option("-D", "--debug", action="store_true",
                    default=False, 
                    help="Enable debugging")

  parser.add_option("-v", "--version", action="store_true",
                    default=False, 
                    help="Display Version")


  help_dict = dict(version=__version__,
             author=__author__,
             created=__created__,
             copyright=__copyright__)


  if '--help' in sys.argv:
    extra = """
  CODE:
  Flag vs. Argument:
  Flag - an option that accepts no input.
  Argument - an option that requires input.

  SEE ALSO:

  cnt
  fixedwidth
  to80

  COPYRIGHT:

  %(copyright)s

  AUTHOR:

  %(author)s

  HISTORY:

  Original Author

  CHANGE LOG:

  v2.0 MAJOR CHANGE                                               August 3, 2022
      First, added -m/--mp3 as an alias of newly added -w/--winamp optional
    flag.  Because I've found myself once again using this program, but not for
    editing music lists, rather for cleaning up a list of Python files, I've
    realized we do not always wish to have the "#EXTM3U" prefixed line.  
      Now, this program will only print said prefix line (to work as a Winamp
    MP3 player playlist file) if you provided this optional argument.

      Secondly, I updated how this program prints the "--help" and how it is
    called, by moving it into the "pytis" directory, and mirring the way
    "getip" works.  This will allow me to call this function in the future,
    importing it's functionality.

  v1.1 MINOR CHANGE                                               August 2, 2022
  Updated to run in Python3 

  v1.0 ORIGINAL RELEASE                                             June 6, 2011
  Original Publish.


EXAMPLES:  

  cat old_music_list.mp3 | uniquelist --winamp > new_music_list.mp3

  cat python_files.txt | uniquelist > py_files_with_duplicates_removed.txt

  getip --list
  /home/jlee38/bitbucket/src_igb/python_files.txt

  uniquelist -dv

  uniquelist -h

  uniquelist --help


BUGS - KNOWN ISSUES:

  NONE (at tis time).

CREATED:

  %(created)s

VERSION:

  %(version)s

"""  % help_dict

    parser.set_description(__doc__ + extra)
    parser.print_help()
    print("\n\n")
    parser.print_usage()
    return 0

  elif '-h' in sys.argv:
    parser.print_usage()
    return 0

  (opts, args) = parser.parse_args()

  if opts.version:
    print("getip v%s" % __version__)
    return 0

  if sys.stdin.isatty():

    try:
      infile = open(args[0])
    except IndexError:
      parser.print_help()
      return 0

  else:
    infile = sys.stdin

  newlines = parse(infile.readlines(-1))

  if newlines:
    if opts.mp3:
      print("#EXTM3U\n")
    for s in newlines:
      print(s)
  return 0 


if __name__ == '__main__':
  try:
    sys.exit(main())
  except Exception as e:
    print("An error has occured.\n")
    print(str(e))
    sys.exit(1)

