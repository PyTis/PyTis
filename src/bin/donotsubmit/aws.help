

Switch Roles 
============

	Description : Switch Role Verification 

	Program: This program is essential for Cross-Account account access into AWS
		accounts.  Many AWS customers use separate AWS accounts (usually in
		conjunction with Consolidated Billing) for their development and production
		resources.  This program ensures each account allows multi-role access.  It
		first ingests AWS account metadata from a file.  It leverages the data to
		log into each account, verifies the multi-role IAM account exists with the
		correct policy and trust policy, creates those resources if it does not
		exist, and updates Cross-Account compliance results in a spreadsheet
		(compliant/non-compliant)

CloudCheckr IAM
===============

	Description : CloudChecker Verification 

	Program: This program is essential for cloudcheckr visibility into AWS
		accounts.  It provides cost and usage reporting and analytics to help users
		manage their AWS deployment.  This program first ingests AWS account
		metadata from a file.   It leverages the data to log into each account,
		verifies if the cloudcheckr IAM account exists in the correct group with
		the correct policy, creates those resources if it does not exist, and
		updates the AWS account metadata file with cloudcheckr compliance results
		(compliant/non-compliant).    


Onboarding Script
=================

	Description : Onboarding 
	Program: This program is essential for on-boarding new AWS accounts.  It 
		first configures the aws-cli by requesting AWSAccessKeyID/AWSSecretKey keys
		from the user.  It proceeds to configure cloudtrail, defines mandatory AWS
		group policies, groups, and users.  This program also creates
		AWSAccessKeyID/AWSSecretKey pair required to create a new cloudcheckr
		account.
 

Root Account Verifier
=====================

	Description : Account Access Verification
	Program: This program is essential to ensure our records are accurate.  Its
		task is simple, but necessary. It will test the root username and password
		for all accounts outputing lines which could be piped into CSV files:
		Access Key ID, Secret Access Key, Status.
	
	
I think you asked for 3 more descriptions but this leaves us with one more.  I
recall the Onboarding, Switch Role, and CloudCheckr programs.  Is there another
one Iâ€™m missing? 

 
Josh
aws --version: aws-cli/1.2.9 Python/3.4.0 Linux/3.13.0-48-generic
aws --version: aws-cli/1.2.9 Python/2.7.6 Linux/3.13.0-48-generic
aws --version: aws-cli/1.7.35 Python/3.4.0 Linux/3.13.0-48-generic
boto:					 2.20.1
boto:					 2.38.0

Bernie
aws --version: aws-cli/1.7.31 Python/2.7.9 Linux/3.14.35-28.38.amzn1.x86_64
boto:					 2.38.0



XXX-TODO: - What's left?
*	1 Break run into a subfunction, for batch processing purposes.

*	2 Attempt all possible error catching.

	3 Automate as many of the strings as possible.  ( version 2? )

	4 I almost forgot, also write the code that utilizes clouldcheckr's api to
		stick the access keys back in.

*	5 if jog fails, log acount info of failed process

"{'Message': 'Trail name cannot be blank!', '__type': 'InvalidTrailNameException'}"


'{"Message": "Trail name cannot be blank!", "__type": "InvalidTrailNameException"}'



XML Lang
Batch
MFA opt
CSV, opt, aws
CloudCheckr account name issue
BAH license
Github

