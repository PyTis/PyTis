#!/usr/bin/env python
"""rdef2css
========
Create CSS skeleton from a yaml def to STDOUT"""

import optparse
import sys
import yaml
import logging; log=logging.getLogger('rdef2css')

__created__ = '2007-06-30 13:33:39.127036'
__version__ = 1.0
__copyright__ = 'KCG'
__author__ = 'Josh Lee'

def yaml2css(data):
    for field in data.get('fields',[]):
        if field['type'] <> 'Hidden':
             print "#%s {\n    \n}\n" % field['name']

    for field in data.get('fields',[]):
        if field['type'] <> 'Hidden':
             print ".pager-header-%s {\n    \n}\n" % field['name']

    for field in data.get('fields',[]):
        if field['type'] <> 'Hidden':
             print ".pager-%s {\n    \n}\n" % field['name']

def main():
    """rdef2css YAMLFILE
Usage: cat YAMLFILE | rdef2css """
    parser = optparse.OptionParser(description=__doc__)
    parser.set_usage(main.__doc__)
    parser.formatter.format_description = lambda s:s

    parser.add_option("-D", "--debug", action="store_true",
                      default=False, 
                      help="Enable debugging")

    (opts, cmd) = parser.parse_args()

    if opts.debug:
        logging.basicConfig(level=logging.DEBUG)
    else:
        logging.basicConfig(level=logging.INFO)

    if sys.stdin.isatty():
        try:
            infile = open(cmd[0])
        except IndexError:
            return parser.print_help()
    else:
        infile = sys.stdin

    yaml2css(yaml.load(infile.read(-1)))

if __name__ == '__main__':
    main()
