# Project shortcuts ##
############################################################################
##  XXX-TODO (next version)
##
############################################################################
## This now keeps up to 20 lines in the file.
## Without giving a number, prj just loads the top line. setprj shifts all
## lines down one, and adds a new top line, prj again would load the top line, 
## but prj 1 or prj 2 would go back one or 2 lines down and read those instead
## (basically allowing you to keep history).  You can manage how many lines it
## keeps track of by editing the "total_prjs=20" variable below

let total_prjs=20 # How many projects to track

############################################################################
# This version explained:  This is for bookmarking a single project direcotry.
# Many times when working on a server, the user must change directories many
# times, however, your purpose for being on said server, is to work on a
# specific project.  Perhaps you'll end up in /etc/apache2/sites-available/
# for editing the sites http conf, and then in /var/bind9/xyz, then perhaps in
# /var/lib/mysql.  Eventually however, you will always be circling back to your
# primary project.  To save the time of typing out the path with "cd" (change
# direcory you now have the follwoing commands available:
# Author: Josh Lee
# Copyright: PyTis.com
# Created: June 1st, 2016
# Modified: August 19, 2022
# License: GPL
# Version: 2
#
# *** The only 2 commands you will want to memorize are: "setPrj" and "prj" ***
#
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# 
# setPrj/setProject, setprj/setproject; 
#
# setPrj is simply an alias of setProject, these are case insensative;
# These commands are for settting the current project.  Look at is as
# bookmarking your project.  You can call it one of 2 ways, by passing the
# current path in with '.' as the input argument, or by passing a specific path
# in, regardless of your current path (expressed with `pwd`).  The path will be
# stored in your home directory in a file named .project.set 
# i.e.: ~/.project.set
#
#   examples:
#     > setPrj
#     > setPrj .
#     > setPrj /some/path/to/a/project
#
# Actual Use Example:
# [ CURRENT PROJECT: ]
# ( jlee38@IP:208.127.81.217 )-[UNAME: CYGWIN_NT-10.0-19044 ]-(13:19:33 PM Thu Jul 28)
# (~/bitbucket/src_igb has 41 files, 46Kb) --> setPrj
# PROJECT WAS:
# PROJECT IS NOW: '/home/jlee38/bitbucket/src_igb'
# 
# Actual Use Example:
# [ CURRENT PROJECT:/home/jlee38/bitbucket/src_igb ]
# ( jlee38@IP:208.127.81.217 )-[UNAME: CYGWIN_NT-10.0-19044 ]-(13:17:16 PM Thu Jul 28)
# (~/bitbucket/src_igb has 41 files, 46Kb) --> setPrj
# NO CHANGE, PROJECT ALREADY SET TO: /home/jlee38/bitbucket/src_igb
#
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#
# showPrj/showProject, showprj/showproject; 
#
# showPrj is simply an alias of showProject, these are case insensative;
# This command reads the current project path from your user's environmental
# varialbe $PROJECT and prints it to screen; WITHOUT reading it from the user's
# ~/.project.set file.
#
# Actual Use Example:
# [ CURRENT PROJECT:/home/jlee38/bitbucket/src_igb ]
# ( jlee38@IP:208.127.81.217 )-[UNAME: CYGWIN_NT-10.0-19044 ]-(13:19:52 PM Thu Jul 28)
# (~/bitbucket/src_igb has 41 files, 46Kb) --> showPrj
# /home/jlee38/bitbucket/src_igb
#
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#
# listPrjs/listProjects, listprjs/listprojects, prjs
# showPrjs/showProjects, showprjs/showprojects; these are case insensative 
#
# This command will print out all projects stored in te ~/.project.set file.
#
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#
# loadPrj/loadProject, loadprj/loadproject these are case insensative
# You can enter a number, to choose a stored bookmark
#
# This command will first read the path stored in your ~/.project.set file,
# load it into the environmental variable $PROJECT, then reset the project in
# your current prompt, by calling _setPrompt.
#
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# getPrj/getProject, getprj/getproject:
#
# getPrj is simply an alias of getProject, these are case insensative;
# This command will first read the path stored in your ~/.project.set file,
# load it into the environmental variable $PROJECT, then reset the project in
# your current prompt, then print it to screen.
# Same as calling loadPrj, _setPrompt, then this prints the project to the
# screen.
#
# Actual Use Example:
# [ CURRENT PROJECT:/home/jlee38/bitbucket/src_igb ]
# ( jlee38@IP:208.127.81.217 )-[UNAME: CYGWIN_NT-10.0-19044 ]-(13:29:19 PM Thu Jul 28)
# (~/bitbucket/src_igb has 41 files, 46Kb) --> getPrj
# PROJECT IS:
# /home/jlee38/bitbucket/src_igb
#
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#
# prj
#
# This command is used to jump (change directories) to the current project.
# 
# Actual Use Example:
# [ CURRENT PROJECT:/home/jlee38/bitbucket/src_igb ]
# ( jlee38@IP:208.127.81.217 )-[UNAME: CYGWIN_NT-10.0-19044 ]-(13:37:39 PM Thu Jul 28)
# (~ has 35 files, 5.8Mb) --> prj
#
# [ CURRENT PROJECT:/home/jlee38/bitbucket/src_igb ]
# ( jlee38@IP:208.127.81.217 )-[UNAME: CYGWIN_NT-10.0-19044 ]-(13:37:44 PM Thu Jul 28)
# (~/bitbucket/src_igb has 41 files, 46Kb) -->
#
############################################################################
############################################################################

function _setPrompt() {
	PS1="\n[CURRENT PROJECT: $PROJECT ]\n\[\e[30;1m\](\[\e[1;32m\]\u\[\e[1;30m\]@IP:$IP)-[last command: \${timer_show} seconds]-(\[\e[0;32m\]\D{%H:%M:%S %p} \d\[\e[30;1m\])->\[\e[30;1m\]\n(\[\e[1;33m\]\w\[\e[30;1m\] has \[\e[37;1m\]\$(/bin/ls -1 | /usr/bin/wc -l | /bin/sed 's: ::g') files, \$(/bin/ls -lah | /bin/grep -m 1 total | /bin/sed 's/total //')b\[\e[30;1m\]) --> \[\e[0m\]"
	# ^^^ I AM LOVING THIS! ^^^^^
}
function _setProject() {
	old="$PROJECT";
	if [ "$*" == '' ]; then
		input=`pwd`;
		input=`realpath $input`;
	else
		input=`realpath $*`;
	fi 

	if [[ "$input" == "$PROJECT" ]]; then
		echo "NO CHANGE, PROJECT ALREADY SET TO: $PROJECT";
	elif [[ "$input" != "" ]]; then
		export PROJECT=$input;
		echo "PROJECT WAS: $old";
		echo "PROJECT IS NOW: '$PROJECT' ";
	else
		noinput=`pwd`;
		if [[ "$noinput" == "$PROJECT" ]]; then
      echo "NO CHANGE, PROJECT ALREADY SET TO: $PROJECT";
		else
      export PROJECT="$noinput";
      echo "PROJECT WAS: $old";
      echo "PROJECT IS NOW: '$PROJECT' ";
		fi
	fi

  # remove it from the nth place it is in (if it is there)
  cat ~/.project.set | egrep -v "$PROJECT" > ~/.project.set.tmp
  
  # now put it at the top of the file
  (echo "$PROJECT"; cat ~/.project.set.tmp) | head -n${total_prjs} > ~/.project.set

  /bin/rm ~/.project.set.tmp; # >&2;

	_setPrompt;
}
function _loadProject() {

	if [ -f	~/.project.set ]; then
    # is $i already set? did it pass through?
    re='^[0-9]+$'
    if [[ $i =~ $re ]]; then
      # use i, i is already set
      :
    elif [ "$*" == '' ]; then
      # if I isn't already set, maybe loadProject was called directly, we can
      # set it now, and if there was no input, use default of 1
      let  i=1;
    else
      # there was input, let's use the input
      let i=$*;
    fi 

		export PROJECT=`sed "${i}q;d" ~/.project.set `;
	else

    touch ~/.project.set;

		export PROJECT="~/";
	fi
  unset i;
	_setPrompt;
}
function _showProject() {
	echo "$PROJECT";
}
function _prj() {
  if [ "$*" == '' ]; then
    let  i=1;
  else
    let i=$*;
  fi 

	_loadProject;

  echo "PROJECT IS NOW: $PROJECT";

	if [ $PROJECT == "~/" ]; then
		cd
	else
		cd $PROJECT;
	fi
#	_setPrompt;

}
function _getProject() {

  re='^[0-9]+$'
  if [[ $i =~ $re ]]; then
    # use i, i is already set
    :
  elif [ "$*" == '' ]; then
    # if I isn't already set, maybe loadProject was called directly, we can
    # set it now, and if there was no input, use default of 1
    let  i=1;
  else
    let i=$*;
  fi 

	_loadProject;
	echo -n "PROJECT IS: ";
	_showProject;
}
function _listProjects() {
  total_lines=`wc -l ~/.project.set | cut -d' ' -f1 `;
  current_line=1;
  for (( c=$current_line; c<=$total_lines; c++ ))
  do
    lin=`sed "${c}q;d"  ~/.project.set`;
    echo "$c: $lin";
  done
}
alias setproject='_setProject';
alias setProject='_setProject';
alias setprj='_setProject';
alias setPrj='_setProject';

alias showProject='_showProject';
alias showproject='_showProject';
alias showprj='_showProject';
alias showPrj='_showProject';

alias listProjects='_listProjects';
alias listprojects='_listProjects';
alias listPrjs='_listProjects';
alias listprjs='_listProjects';

alias showProjects='_listProjects';
alias showprojects='_listProjects';
alias showprjs='_listProjects';
alias showPrjs='_listProjects';

alias loadProject='_loadProject';
alias loadproject='_loadProject';
alias loadprj='_loadProject';
alias loadPrj='_loadProject';

alias getProject='_getProject';
alias getproject='_getProject';
alias getPrj='_getProject';
alias getprj='_getProject';

alias prjs='_listProjects';
alias prj='_prj'; # prj [optional NUMBER] ie: >> prj 3

#
# -----------------------------------------------------------------------------

_loadProject;
